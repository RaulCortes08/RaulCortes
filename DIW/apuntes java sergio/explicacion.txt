1. Estructura general
Este código crea una página web sencilla con una animación en la que una imagen (una pelota) se desplaza hacia la derecha después de un tiempo determinado por el usuario.

Los elementos principales son:

Una imagen de una pelota (pelota1.png).
Un botón (pulsador) que inicia la animación.
Un cuadro de texto donde el usuario introduce los segundos de espera antes del movimiento.
Un mensaje (aviso) que parpadea en rojo y negro.
2. HTML (Estructura de la página)
html
Copiar
Editar
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8"/>
	<title>Ejercicio 1</title>
	
	<!-- Estilos en un fichero externo que no tendrás que modificar -->
	<link rel="stylesheet" type="text/css" href="estilos1.css" />
Se establece la codificación en UTF-8 para que se muestren correctamente caracteres especiales.
Se define un título para la página: "Ejercicio 1".
Se enlaza un archivo CSS externo llamado estilos1.css para aplicar estilos (aunque no vemos su contenido en este código).
html
Copiar
Editar
<script type="text/javascript">
Se abre la sección de JavaScript para programar la funcionalidad de la página.
3. JavaScript (Lógica del comportamiento de la página)
3.1 Evento DOMContentLoaded
js
Copiar
Editar
document.addEventListener("DOMContentLoaded", () => {
Esta función se ejecuta cuando toda la estructura HTML de la página ha sido cargada en el navegador.
Es útil para asegurarnos de que los elementos existen antes de manipularlos con JavaScript.
3.2 Definición de constantes y obtención de elementos
js
Copiar
Editar
const DESP = 70;
const pulsador = document.getElementById("pulsador")
const aviso = document.getElementById("aviso")
const pelota = document.getElementById("pelota1")
DESP = 70: Define el desplazamiento en "vw" (viewport width), es decir, la pelota se moverá un 70% del ancho de la ventana.
pulsador: Referencia al botón que inicia la animación.
aviso: Referencia al mensaje que parpadea.
pelota: Referencia a la imagen de la pelota.
3.3 Función para obtener los milisegundos desde el input
js
Copiar
Editar
function getMilisegundos(){
	return document.querySelector("input[name='segundos']").value * 1000;
}
Obtiene el valor del cuadro de texto donde el usuario escribe los segundos.
Convierte los segundos en milisegundos (* 1000) porque setTimeout trabaja en milisegundos.
3.4 Función para hacer parpadear el texto del aviso
js
Copiar
Editar
function flash() {
	if (aviso.style.color === "red") {
		aviso.style.color = "black"
	}else{
		aviso.style.color = "red"
	}
}
setInterval(flash, 500)
Alterna el color del texto entre rojo y negro cada 500 ms (0.5 segundos).
setInterval(flash, 500): Ejecuta la función flash cada medio segundo, haciendo que el mensaje "¡Pulsa!" parpadee.
3.5 Función desplazar (Mueve la pelota)
js
Copiar
Editar
async function desplazar() {
	await new Promise((resolve, reject) => {
		var milisegundos = getMilisegundos();
		// var pelota = document.getElementById("pelota1");
				
		// Resto de código
		pelota.style.marginLeft = DESP + "vw"
		console.log("funciona")
		pulsador.style.opacity = "1"	
	})
}
Es una función asíncrona (async), pero en realidad la promesa que usa no tiene sentido porque no tiene una acción asincrónica real.
Mueve la pelota hacia la derecha cambiando su marginLeft a 70vw (70% del ancho de la pantalla).
Muestra el botón pulsador otra vez (opacity = "1").
console.log("funciona") imprime un mensaje en la consola del navegador cuando se ejecuta.
3.6 Evento de click en el botón
js
Copiar
Editar
document.getElementById("pulsador").addEventListener("click", (e)=>{
	let milisegundos = getMilisegundos();
				
	if (!isNaN(milisegundos) && milisegundos > 0){				
		// Aquí comienza la secuencia de ocultar el pulsador y llamar a la función desplazar
		pelota.style.margin = "auto"
		pulsador.style.opacity = "0"
					
		setTimeout(desplazar, milisegundos)
					
	} else {
		alert("Debe introducir un número de segundos mayor que cero");
	}		
});
Cuando se hace click en el botón (pulsador):
Se obtiene el número de milisegundos del input.
Se verifica si el valor es un número mayor que 0.
Si el número es válido:
Centra la pelota con margin: auto.
Oculta el botón (opacity = "0").
Usa setTimeout(desplazar, milisegundos) para ejecutar desplazar después del tiempo indicado.
Si el número es inválido, muestra una alerta con alert("Debe introducir un número de segundos mayor que cero").
3.7 Mostrar el botón desde el principio
js
Copiar
Editar
pulsador.style.opacity = "1"
Asegura que el botón pulsador sea visible al cargar la página.
4. HTML (Cuerpo de la página)
html
Copiar
Editar
<body>
	<img id="pelota1" class="pelota" src="pelota1.png"/>
	<div id="contenedor">
		<div id="pulsador" class="activador"><span>A rodar</span></div>
		<input type="text" name="segundos" size="5" class="activador"></input>
		<div id="aviso">¡Pulsa!</div>
	</div>	
</body>
</html>
Elementos clave
Imagen de la pelota (<img id="pelota1" class="pelota" src="pelota1.png"/>):

Es la imagen que se desplazará.
Contenedor principal (<div id="contenedor">):

Agrupa los elementos interactivos.
Botón "A rodar" (<div id="pulsador" class="activador"><span>A rodar</span></div>):

Inicia la animación al hacer clic.
Cuadro de texto (<input type="text" name="segundos" size="5" class="activador">):

Permite al usuario introducir el tiempo de espera.
Texto de aviso "¡Pulsa!" (<div id="aviso">¡Pulsa!</div>):

Parpadea para indicar que el usuario debe interactuar.
5. Resumen del funcionamiento
Al abrir la página, el mensaje "¡Pulsa!" comienza a parpadear.
El usuario introduce un número en el cuadro de texto (en segundos).
Al hacer clic en "A rodar":
El botón se oculta.
Se espera el tiempo indicado.
La pelota se mueve 70% a la derecha.
El botón reaparece.